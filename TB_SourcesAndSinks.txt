<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)> -> _SOURCE_
<android.content.Context: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.content.Intent: android.os.Bundle getExtras()> -> _SOURCE_
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)> -> _SOURCE_
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)> -> _SOURCE_
<android.database.Cursor: int getInt(int)> -> _SOURCE_
<android.database.Cursor: java.lang.String getString(int)> -> _SOURCE_
<android.database.Cursor: long getLong(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> -> _SOURCE_
<android.os.Environment: java.io.File getExternalStorageDirectory()> -> _SOURCE_
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()> -> _SOURCE_
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getLac()> -> _SOURCE_
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])> -> _SOURCE_
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()> -> _SOURCE_
<android.widget.EditText: android.text.Editable getText()> -> _SOURCE_
<com.example.bankmanager.BankActivity: android.view.View findViewById(int)> -> _SOURCE_
<com.google.elements.Utils: java.lang.String getDeviceId()> -> _SOURCE_
<exts.whats.activities.Cards: android.view.View findViewById(int)> -> _SOURCE_
<frhfsd.siksdk.ujdsfjkfsd.WrehifsdkjsActivity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<java.io.File: java.io.File[] listFiles()> -> _SOURCE_
<java.io.File: void <init>(java.io.File,java.lang.String)> -> _SOURCE_
<java.io.File: void <init>(java.lang.String)> -> _SOURCE_
<java.io.FileInputStream: void <init>(java.io.File)> -> _SOURCE_
<java.io.FileInputStream: void <init>(java.lang.String)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> -> _SOURCE_
<java.net.HttpURLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<java.net.URL: java.io.InputStream openStream()> -> _SOURCE_
<org.apache.http.HttpEntity: java.io.InputStream getContent()> -> _SOURCE_

<android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> _SINK_
<android.content.Context: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<android.content.Context: void startActivity(android.content.Intent)> -> _SINK_
<android.content.SharedPreferences$Editor: boolean commit()> -> _SINK_
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)> -> _SINK_
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> -> _SINK_
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _SINK_
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)> -> _SINK_
<com.android.tools.system.MyPostRequest: android.os.AsyncTask execute(java.lang.Object[])> -> _SINK_
<com.baidu.inf.iis.bcs.BaiduBCS: com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObject(com.baidu.inf.iis.bcs.request.PutObjectRequest)> -> _SINK_
<com.example.service.InstallService: void startActivity(android.content.Intent)> -> _SINK_
<com.movieshow.down.Badaccents: void startActivity(android.content.Intent)> -> _SINK_
<exts.whats.activities.Cards: android.content.ComponentName startService(android.content.Intent)> -> _SINK_
<java.io.BufferedWriter: void write(java.lang.String)> -> _SINK_
<java.io.DataOutputStream: void flush()> -> _SINK_
<java.io.DataOutputStream: void write(byte[])> -> _SINK_
<java.io.DataOutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.DataOutputStream: void writeBytes(java.lang.String)> -> _SINK_
<java.io.DataOutputStream: void writeUTF(java.lang.String)> -> _SINK_
<java.io.File: boolean delete()> -> _SINK_
<java.io.FileWriter: java.io.Writer append(java.lang.CharSequence)> -> _SINK_
<java.io.FileWriter: void write(java.lang.String)> -> _SINK_
<java.io.OutputStream: void write(byte[])> -> _SINK_
<java.io.OutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.OutputStreamWriter: void write(java.lang.String)> -> _SINK_
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)> -> _SINK_
<java.io.PrintWriter: void println(java.lang.String)> -> _SINK_
<java.io.PrintWriter: void write(java.lang.String)> -> _SINK_
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> -> _SINK_
<java.net.HttpURLConnection: java.io.InputStream getInputStream()> -> _SINK_
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()> -> _SINK_
<java.net.HttpURLConnection: void connect()> -> _SINK_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SINK_
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)> -> _SINK_
<javax.mail.Transport: void sendMessage(javax.mail.Message,javax.mail.Address[])> -> _SINK_
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SINK_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SINK_
<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])> -> _SINK_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])> -> _SINK_
